{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","NOT_CONCATENABLE","OPERATORS","ADD","SUBTRACT","MULTIPLY","DIVIDE","EQUALS","CLEAR","DECIMAL","isANumber","button","props","_this","Object","C_Users_tomas_Documents_GitHub_React_Projects_react_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_tomas_Documents_GitHub_React_Projects_react_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_tomas_Documents_GitHub_React_Projects_react_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","display","formula","resultCalculated","calculate","bind","C_Users_tomas_Documents_GitHub_React_Projects_react_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","canConcatOperator","canConcatDecimal","handleClick","getInitialFormula","slice","result","eval","replace","setState","lastChar","length","includes","lastOperator","addZero","console","log","i","newDisplay","newFormula","lastResult","split","canConcat","decimalToAdd","toString","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","id","onClick","className","Component"],"mappings":"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","file":"static/js/main.fca8975e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint no-eval: 0 */\nimport React, { Component } from 'react';\nimport './App.css';\n\n//const MAX_LENGTH = 36;\nconst NOT_CONCATENABLE = [\"+\", \"-\", \"x\", \"/\", \".\"];\nconst OPERATORS = [\"+\", \"-\", \"x\", \"/\"];\n\nconst ADD = -1;\nconst SUBTRACT = -2;\nconst MULTIPLY = -3;\nconst DIVIDE = -4;\nconst EQUALS = -5;\nconst CLEAR = -6;\nconst DECIMAL = -7;\n\nconst isANumber = (button) => { \n  if (button > -1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: '0',\n      formula: '',\n      resultCalculated: false\n    };\n\n    this.calculate = this.calculate.bind(this);\n    this.canConcatOperator = this.canConcatOperator.bind(this);\n    this.canConcatDecimal = this.canConcatDecimal.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getInitialFormula = this.getInitialFormula.bind(this);\n  }\n\n  calculate() {\n    let display = \"\";\n    let formula = this.state.formula;\n    if (!this.canConcatOperator()) {\n      formula = formula.slice(0, -1);\n    }\n    let result = eval(formula.replace(\"x\", \"*\"));\n    formula += \"=\" + result;\n    display = result;\n    this.setState({ resultCalculated: true });\n    // array has this structure -> [newDisplay, newFormula]\n    return [display, formula];\n  }\n\n  canConcatOperator() {\n    let lastChar = this.state.display[this.state.display.length - 1];\n    let canConcatenate = !OPERATORS.includes(lastChar);\n    return canConcatenate;\n  }\n\n  // returns true if can add decimal point and if it needs to add a zero before it\n  canConcatDecimal() {\n    let lastOperator = \"\";\n    let addZero = true;\n    let formula = this.state.formula;\n    console.log(formula.length);\n    for (var i = formula.length - 1; i >= 0; i--) {\n      if (NOT_CONCATENABLE.includes(formula[i])) {\n        if (formula[i] === \".\") {\n          lastOperator = \".\";\n          break;\n        }\n        break;\n      } else {\n        addZero = false;\n      }\n    }\n    if (formula.length === 0) {\n      addZero = false;\n    }\n    if (lastOperator === \".\") {\n      return [false, addZero];\n    }\n    return [true, addZero];\n  }\n\n\n  handleClick(button) {\n    let newDisplay = (this.state.display === \"0\" && isANumber(button)) ? \"\" : this.state.display;\n    let newFormula = this.getInitialFormula(button);\n    if (this.state.resultCalculated && button !== EQUALS) {\n      this.setState({ resultCalculated: false });\n      if (button >= 0) {\n        newDisplay = \"\";\n        newFormula = \"\";\n      } else {\n        let lastResult = newFormula.split(\"=\")[1];\n        newDisplay = lastResult;\n        newFormula = lastResult;\n      }\n    }\n    switch(button) {\n      case(ADD):\n        newDisplay = \"+\";\n        if (this.canConcatOperator()) {\n          newFormula += \"+\";\n        } else {\n          newFormula = newFormula.slice(0, -1) + \"+\";\n        }\n        break;\n      case(SUBTRACT):\n        newDisplay = \"-\";\n        if (this.canConcatOperator()) {\n          newFormula += \"-\";\n        } else {\n          newFormula = newFormula.slice(0, -1) + \"-\";\n        }\n        break;\n      case(MULTIPLY):\n        newDisplay = \"x\";\n        if (this.canConcatOperator()) {\n          newFormula += \"x\";\n        } else {\n          newFormula = newFormula.slice(0, -1) + \"x\";\n        }\n        break;\n      case(DIVIDE):\n        newDisplay = \"/\";\n        if (this.canConcatOperator()) {\n          newFormula += \"/\";\n        } else {\n          newFormula = newFormula.slice(0, -1) + \"/\";\n        }\n        break;\n      case(DECIMAL):\n        let canConcat = this.canConcatDecimal();\n        if (canConcat[0]) {\n          let decimalToAdd = \"\";\n          if (canConcat[1]) {\n            decimalToAdd = \"0.\";\n            newDisplay = \"\";\n          } else {\n            decimalToAdd = \".\";\n          }\n          newDisplay += decimalToAdd;\n          newFormula += decimalToAdd;\n        }\n        break;\n      case(EQUALS):\n        if (this.state.resultCalculated) break; \n        let result = this.calculate();\n        newDisplay = result[0];\n        newFormula = result[1];\n        break;\n      case(CLEAR):\n        newDisplay = \"0\";\n        newFormula = \"\";\n        break;\n      default:\n        this.canConcatOperator() ? newDisplay += button.toString() : newDisplay = button;\n        newFormula += button;\n    }\n    this.setState({ display: newDisplay, formula: newFormula });\n  }\n\n  getInitialFormula(button) {\n    if (this.state.formula === \"\") {\n      if (isANumber(button)) {\n        return \"\";\n      } else {\n        return \"0\";\n      }\n    } else {\n      return this.state.formula;\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <div id=\"equals\" onClick={ () => this.handleClick(EQUALS) }>=</div>\n        <div id=\"zero\" onClick={ () => this.handleClick(0) } className={\"number\"}>0</div>\n        <div id=\"one\" onClick={ () => this.handleClick(1) } className={\"number\"}>1</div>\n        <div id=\"two\" onClick={ () => this.handleClick(2) } className={\"number\"}>2</div>\n        <div id=\"three\" onClick={ () => this.handleClick(3) } className={\"number\"}>3</div>\n        <div id=\"four\" onClick={ () => this.handleClick(4) } className={\"number\"}>4</div>\n        <div id=\"five\" onClick={ () => this.handleClick(5) } className={\"number\"}>5</div>\n        <div id=\"six\" onClick={ () => this.handleClick(6) } className={\"number\"}>6</div>\n        <div id=\"seven\" onClick={ () => this.handleClick(7) } className={\"number\"}>7</div>\n        <div id=\"eight\" onClick={ () => this.handleClick(8) } className={\"number\"}>8</div>\n        <div id=\"nine\" onClick={ () => this.handleClick(9) } className={\"number\"}>9</div>\n        <div id=\"add\" onClick={ () => this.handleClick(ADD) } className={\"operation\"}>+</div>\n        <div id=\"subtract\" onClick={ () => this.handleClick(SUBTRACT) } className={\"operation\"}>-</div>\n        <div id=\"multiply\" onClick={ () => this.handleClick(MULTIPLY) } className={\"operation\"}>X</div>\n        <div id=\"divide\" onClick={ () => this.handleClick(DIVIDE) } className={\"operation\"}>/</div>\n        <div id=\"decimal\" onClick={ () => this.handleClick(DECIMAL) } className={\"number\"}>.</div>\n        <div id=\"clear\" onClick={ () => this.handleClick(CLEAR) }>AC</div>\n        <div id=\"formula\">{ this.state.formula }</div>\n        <div id=\"display\">{ this.state.display }</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}